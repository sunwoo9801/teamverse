plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.1'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'org.zerock'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// 로그인 JWT 기반 인증 관련 의존성
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.security:spring-security-crypto'
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'


	//@NotBlank 애너테이션 사용
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	//Web Socket 실시간 데이터 처리
	implementation 'org.springframework.boot:spring-boot-starter-websocket'

	//Cookie 설정을 위한 의존성
	implementation 'jakarta.servlet:jakarta.servlet-api'
	
	//
	implementation 'com.google.code.gson:gson'

	// .env 파일 사용을 위함(구글맵 관련)
    implementation 'io.github.cdimascio:java-dotenv:5.2.2'
		
}

tasks.named('test') {
	useJUnitPlatform()
}

//추가된 부분: Java 컴파일 시 `-parameters` 플래그 적용
tasks.withType(JavaCompile) {
	options.compilerArgs << "-parameters"
}

dependencies {
    implementation 'org.postgresql:postgresql:42.7.1'  // 최신 버전 사용
}